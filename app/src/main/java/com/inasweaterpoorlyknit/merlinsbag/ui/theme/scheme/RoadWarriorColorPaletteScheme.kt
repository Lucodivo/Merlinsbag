package com.inasweaterpoorlyknit.merlinsbag.ui.theme.scheme

import androidx.compose.material3.ColorScheme
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color
import com.inasweaterpoorlyknit.merlinsbag.R

// Color Scheme mostly generated using https://m3.material.io/theme-builder

object RoadWarriorColorPaletteScheme: ColorPaletteScheme {
  private val primaryLight = Color(0xFF7D5700)
  private val onPrimaryLight = Color(0xFFFFFFFF)
  private val primaryContainerLight = Color(0xFFEAB044)
  private val onPrimaryContainerLight = Color(0xFF3E2900)
  private val secondaryLight = Color(0xFF735A30)
  private val onSecondaryLight = Color(0xFFFFFFFF)
  private val secondaryContainerLight = Color(0xFFFFE0B1)
  private val onSecondaryContainerLight = Color(0xFF5C451D)
  private val tertiaryLight = Color(0xFF556500)
  private val onTertiaryLight = Color(0xFFFFFFFF)
  private val tertiaryContainerLight = Color(0xFFB0C45D)
  private val onTertiaryContainerLight = Color(0xFF283100)
  private val errorLight = Color(0xFFBA1A1A)
  private val onErrorLight = Color(0xFFFFFFFF)
  private val errorContainerLight = Color(0xFFFFDAD6)
  private val onErrorContainerLight = Color(0xFF410002)
  private val backgroundLight = Color(0xFFFFF8F3)
  private val onBackgroundLight = Color(0xFF201B13)
  private val surfaceLight = Color(0xFFFFF8F3)
  private val onSurfaceLight = Color(0xFF201B13)
  private val surfaceVariantLight = Color(0xFFF1E0CB)
  private val onSurfaceVariantLight = Color(0xFF504536)
  private val outlineLight = Color(0xFF827563)
  private val outlineVariantLight = Color(0xFFD4C4B0)
  private val scrimLight = Color(0xFF000000)
  private val inverseSurfaceLight = Color(0xFF353027)
  private val inverseOnSurfaceLight = Color(0xFFFAEFE2)
  private val inversePrimaryLight = Color(0xFFF8BC4F)
  private val surfaceDimLight = Color(0xFFE3D8CC)
  private val surfaceBrightLight = Color(0xFFFFF8F3)
  private val surfaceContainerLowestLight = Color(0xFFFFFFFF)
  private val surfaceContainerLowLight = Color(0xFFFDF2E5)
  private val surfaceContainerLight = Color(0xFFF7ECE0)
  private val surfaceContainerHighLight = Color(0xFFF2E6DA)
  private val surfaceContainerHighestLight = Color(0xFFECE1D4)

  private val primaryLightMediumContrast = Color(0xFF5A3E00)
  private val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
  private val primaryContainerLightMediumContrast = Color(0xFF9A6C00)
  private val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
  private val secondaryLightMediumContrast = Color(0xFF553F18)
  private val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
  private val secondaryContainerLightMediumContrast = Color(0xFF8B7044)
  private val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
  private val tertiaryLightMediumContrast = Color(0xFF3B4800)
  private val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
  private val tertiaryContainerLightMediumContrast = Color(0xFF6A7C1C)
  private val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
  private val errorLightMediumContrast = Color(0xFF8C0009)
  private val onErrorLightMediumContrast = Color(0xFFFFFFFF)
  private val errorContainerLightMediumContrast = Color(0xFFDA342E)
  private val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
  private val backgroundLightMediumContrast = Color(0xFFFFF8F3)
  private val onBackgroundLightMediumContrast = Color(0xFF201B13)
  private val surfaceLightMediumContrast = Color(0xFFFFF8F3)
  private val onSurfaceLightMediumContrast = Color(0xFF201B13)
  private val surfaceVariantLightMediumContrast = Color(0xFFF1E0CB)
  private val onSurfaceVariantLightMediumContrast = Color(0xFF4C4132)
  private val outlineLightMediumContrast = Color(0xFF695D4D)
  private val outlineVariantLightMediumContrast = Color(0xFF867967)
  private val scrimLightMediumContrast = Color(0xFF000000)
  private val inverseSurfaceLightMediumContrast = Color(0xFF353027)
  private val inverseOnSurfaceLightMediumContrast = Color(0xFFFAEFE2)
  private val inversePrimaryLightMediumContrast = Color(0xFFF8BC4F)
  private val surfaceDimLightMediumContrast = Color(0xFFE3D8CC)
  private val surfaceBrightLightMediumContrast = Color(0xFFFFF8F3)
  private val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
  private val surfaceContainerLowLightMediumContrast = Color(0xFFFDF2E5)
  private val surfaceContainerLightMediumContrast = Color(0xFFF7ECE0)
  private val surfaceContainerHighLightMediumContrast = Color(0xFFF2E6DA)
  private val surfaceContainerHighestLightMediumContrast = Color(0xFFECE1D4)

  private val primaryLightHighContrast = Color(0xFF301F00)
  private val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
  private val primaryContainerLightHighContrast = Color(0xFF5A3E00)
  private val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
  private val secondaryLightHighContrast = Color(0xFF301F00)
  private val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
  private val secondaryContainerLightHighContrast = Color(0xFF553F18)
  private val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
  private val tertiaryLightHighContrast = Color(0xFF1E2500)
  private val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
  private val tertiaryContainerLightHighContrast = Color(0xFF3B4800)
  private val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
  private val errorLightHighContrast = Color(0xFF4E0002)
  private val onErrorLightHighContrast = Color(0xFFFFFFFF)
  private val errorContainerLightHighContrast = Color(0xFF8C0009)
  private val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
  private val backgroundLightHighContrast = Color(0xFFFFF8F3)
  private val onBackgroundLightHighContrast = Color(0xFF201B13)
  private val surfaceLightHighContrast = Color(0xFFFFF8F3)
  private val onSurfaceLightHighContrast = Color(0xFF000000)
  private val surfaceVariantLightHighContrast = Color(0xFFF1E0CB)
  private val onSurfaceVariantLightHighContrast = Color(0xFF2B2315)
  private val outlineLightHighContrast = Color(0xFF4C4132)
  private val outlineVariantLightHighContrast = Color(0xFF4C4132)
  private val scrimLightHighContrast = Color(0xFF000000)
  private val inverseSurfaceLightHighContrast = Color(0xFF353027)
  private val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
  private val inversePrimaryLightHighContrast = Color(0xFFFFE9CA)
  private val surfaceDimLightHighContrast = Color(0xFFE3D8CC)
  private val surfaceBrightLightHighContrast = Color(0xFFFFF8F3)
  private val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
  private val surfaceContainerLowLightHighContrast = Color(0xFFFDF2E5)
  private val surfaceContainerLightHighContrast = Color(0xFFF7ECE0)
  private val surfaceContainerHighLightHighContrast = Color(0xFFF2E6DA)
  private val surfaceContainerHighestLightHighContrast = Color(0xFFECE1D4)

  private val primaryDark = Color(0xFFFFCC74)
  private val onPrimaryDark = Color(0xFF422C00)
  private val primaryContainerDark = Color(0xFFD9A135)
  private val onPrimaryContainerDark = Color(0xFF2D1D00)
  private val secondaryDark = Color(0xFFE2C28F)
  private val onSecondaryDark = Color(0xFF402D07)
  private val secondaryContainerDark = Color(0xFF4F3A12)
  private val onSecondaryContainerDark = Color(0xFFEDCC98)
  private val tertiaryDark = Color(0xFFC8DD72)
  private val onTertiaryDark = Color(0xFF2B3400)
  private val tertiaryContainerDark = Color(0xFF9FB34E)
  private val onTertiaryContainerDark = Color(0xFF1B2200)
  private val errorDark = Color(0xFFFFB4AB)
  private val onErrorDark = Color(0xFF690005)
  private val errorContainerDark = Color(0xFF93000A)
  private val onErrorContainerDark = Color(0xFFFFDAD6)
  private val backgroundDark = Color(0xFF17130C)
  private val onBackgroundDark = Color(0xFFECE1D4)
  private val surfaceDark = Color(0xFF17130C)
  private val onSurfaceDark = Color(0xFFECE1D4)
  private val surfaceVariantDark = Color(0xFF504536)
  private val onSurfaceVariantDark = Color(0xFFD4C4B0)
  private val outlineDark = Color(0xFF9C8F7C)
  private val outlineVariantDark = Color(0xFF504536)
  private val scrimDark = Color(0xFF000000)
  private val inverseSurfaceDark = Color(0xFFECE1D4)
  private val inverseOnSurfaceDark = Color(0xFF353027)
  private val inversePrimaryDark = Color(0xFF7D5700)
  private val surfaceDimDark = Color(0xFF17130C)
  private val surfaceBrightDark = Color(0xFF3E3830)
  private val surfaceContainerLowestDark = Color(0xFF120E07)
  private val surfaceContainerLowDark = Color(0xFF201B13)
  private val surfaceContainerDark = Color(0xFF241F17)
  private val surfaceContainerHighDark = Color(0xFF2F2921)
  private val surfaceContainerHighestDark = Color(0xFF3A342B)

  private val primaryDarkMediumContrast = Color(0xFFFFCC74)
  private val onPrimaryDarkMediumContrast = Color(0xFF2C1C00)
  private val primaryContainerDarkMediumContrast = Color(0xFFD9A135)
  private val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
  private val secondaryDarkMediumContrast = Color(0xFFE7C693)
  private val onSecondaryDarkMediumContrast = Color(0xFF211400)
  private val secondaryContainerDarkMediumContrast = Color(0xFFA98C5E)
  private val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
  private val tertiaryDarkMediumContrast = Color(0xFFC8DD72)
  private val onTertiaryDarkMediumContrast = Color(0xFF1A2100)
  private val tertiaryContainerDarkMediumContrast = Color(0xFF9FB34E)
  private val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
  private val errorDarkMediumContrast = Color(0xFFFFBAB1)
  private val onErrorDarkMediumContrast = Color(0xFF370001)
  private val errorContainerDarkMediumContrast = Color(0xFFFF5449)
  private val onErrorContainerDarkMediumContrast = Color(0xFF000000)
  private val backgroundDarkMediumContrast = Color(0xFF17130C)
  private val onBackgroundDarkMediumContrast = Color(0xFFECE1D4)
  private val surfaceDarkMediumContrast = Color(0xFF17130C)
  private val onSurfaceDarkMediumContrast = Color(0xFFFFFAF7)
  private val surfaceVariantDarkMediumContrast = Color(0xFF504536)
  private val onSurfaceVariantDarkMediumContrast = Color(0xFFD8C8B4)
  private val outlineDarkMediumContrast = Color(0xFFAFA18D)
  private val outlineVariantDarkMediumContrast = Color(0xFF8E816F)
  private val scrimDarkMediumContrast = Color(0xFF000000)
  private val inverseSurfaceDarkMediumContrast = Color(0xFFECE1D4)
  private val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F2921)
  private val inversePrimaryDarkMediumContrast = Color(0xFF614200)
  private val surfaceDimDarkMediumContrast = Color(0xFF17130C)
  private val surfaceBrightDarkMediumContrast = Color(0xFF3E3830)
  private val surfaceContainerLowestDarkMediumContrast = Color(0xFF120E07)
  private val surfaceContainerLowDarkMediumContrast = Color(0xFF201B13)
  private val surfaceContainerDarkMediumContrast = Color(0xFF241F17)
  private val surfaceContainerHighDarkMediumContrast = Color(0xFF2F2921)
  private val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A342B)

  private val primaryDarkHighContrast = Color(0xFFFFFAF7)
  private val onPrimaryDarkHighContrast = Color(0xFF000000)
  private val primaryContainerDarkHighContrast = Color(0xFFFDC152)
  private val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
  private val secondaryDarkHighContrast = Color(0xFFFFFAF7)
  private val onSecondaryDarkHighContrast = Color(0xFF000000)
  private val secondaryContainerDarkHighContrast = Color(0xFFE7C693)
  private val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
  private val tertiaryDarkHighContrast = Color(0xFFF8FFD1)
  private val onTertiaryDarkHighContrast = Color(0xFF000000)
  private val tertiaryContainerDarkHighContrast = Color(0xFFC0D46B)
  private val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
  private val errorDarkHighContrast = Color(0xFFFFF9F9)
  private val onErrorDarkHighContrast = Color(0xFF000000)
  private val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
  private val onErrorContainerDarkHighContrast = Color(0xFF000000)
  private val backgroundDarkHighContrast = Color(0xFF17130C)
  private val onBackgroundDarkHighContrast = Color(0xFFECE1D4)
  private val surfaceDarkHighContrast = Color(0xFF17130C)
  private val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
  private val surfaceVariantDarkHighContrast = Color(0xFF504536)
  private val onSurfaceVariantDarkHighContrast = Color(0xFFFFFAF7)
  private val outlineDarkHighContrast = Color(0xFFD8C8B4)
  private val outlineVariantDarkHighContrast = Color(0xFFD8C8B4)
  private val scrimDarkHighContrast = Color(0xFF000000)
  private val inverseSurfaceDarkHighContrast = Color(0xFFECE1D4)
  private val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
  private val inversePrimaryDarkHighContrast = Color(0xFF3A2600)
  private val surfaceDimDarkHighContrast = Color(0xFF17130C)
  private val surfaceBrightDarkHighContrast = Color(0xFF3E3830)
  private val surfaceContainerLowestDarkHighContrast = Color(0xFF120E07)
  private val surfaceContainerLowDarkHighContrast = Color(0xFF201B13)
  private val surfaceContainerDarkHighContrast = Color(0xFF241F17)
  private val surfaceContainerHighDarkHighContrast = Color(0xFF2F2921)
  private val surfaceContainerHighestDarkHighContrast = Color(0xFF3A342B)

  override fun nameStrRes(): Int = R.string.road_warrior

  override fun light(): ColorScheme = lightColorScheme(
    primary = primaryLight,
    onPrimary = onPrimaryLight,
    primaryContainer = primaryContainerLight,
    onPrimaryContainer = onPrimaryContainerLight,
    secondary = secondaryLight,
    onSecondary = onSecondaryLight,
    secondaryContainer = secondaryContainerLight,
    onSecondaryContainer = onSecondaryContainerLight,
    tertiary = tertiaryLight,
    onTertiary = onTertiaryLight,
    tertiaryContainer = tertiaryContainerLight,
    onTertiaryContainer = onTertiaryContainerLight,
    error = errorLight,
    onError = onErrorLight,
    errorContainer = errorContainerLight,
    onErrorContainer = onErrorContainerLight,
    background = backgroundLight,
    onBackground = onBackgroundLight,
    surface = surfaceLight,
    onSurface = onSurfaceLight,
    surfaceVariant = surfaceVariantLight,
    onSurfaceVariant = onSurfaceVariantLight,
    outline = outlineLight,
    outlineVariant = outlineVariantLight,
    scrim = scrimLight,
    inverseSurface = inverseSurfaceLight,
    inverseOnSurface = inverseOnSurfaceLight,
    inversePrimary = inversePrimaryLight,
    surfaceDim = surfaceDimLight,
    surfaceBright = surfaceBrightLight,
    surfaceContainerLowest = surfaceContainerLowestLight,
    surfaceContainerLow = surfaceContainerLowLight,
    surfaceContainer = surfaceContainerLight,
    surfaceContainerHigh = surfaceContainerHighLight,
    surfaceContainerHighest = surfaceContainerHighestLight,
  )

  override fun dark(): ColorScheme = darkColorScheme(
    primary = primaryDark,
    onPrimary = onPrimaryDark,
    primaryContainer = primaryContainerDark,
    onPrimaryContainer = onPrimaryContainerDark,
    secondary = secondaryDark,
    onSecondary = onSecondaryDark,
    secondaryContainer = secondaryContainerDark,
    onSecondaryContainer = onSecondaryContainerDark,
    tertiary = tertiaryDark,
    onTertiary = onTertiaryDark,
    tertiaryContainer = tertiaryContainerDark,
    onTertiaryContainer = onTertiaryContainerDark,
    error = errorDark,
    onError = onErrorDark,
    errorContainer = errorContainerDark,
    onErrorContainer = onErrorContainerDark,
    background = backgroundDark,
    onBackground = onBackgroundDark,
    surface = surfaceDark,
    onSurface = onSurfaceDark,
    surfaceVariant = surfaceVariantDark,
    onSurfaceVariant = onSurfaceVariantDark,
    outline = outlineDark,
    outlineVariant = outlineVariantDark,
    scrim = scrimDark,
    inverseSurface = inverseSurfaceDark,
    inverseOnSurface = inverseOnSurfaceDark,
    inversePrimary = inversePrimaryDark,
    surfaceDim = surfaceDimDark,
    surfaceBright = surfaceBrightDark,
    surfaceContainerLowest = surfaceContainerLowestDark,
    surfaceContainerLow = surfaceContainerLowDark,
    surfaceContainer = surfaceContainerDark,
    surfaceContainerHigh = surfaceContainerHighDark,
    surfaceContainerHighest = surfaceContainerHighestDark,
  )

  override fun mediumContrastLight(): ColorScheme = lightColorScheme(
    primary = primaryLightMediumContrast,
    onPrimary = onPrimaryLightMediumContrast,
    primaryContainer = primaryContainerLightMediumContrast,
    onPrimaryContainer = onPrimaryContainerLightMediumContrast,
    secondary = secondaryLightMediumContrast,
    onSecondary = onSecondaryLightMediumContrast,
    secondaryContainer = secondaryContainerLightMediumContrast,
    onSecondaryContainer = onSecondaryContainerLightMediumContrast,
    tertiary = tertiaryLightMediumContrast,
    onTertiary = onTertiaryLightMediumContrast,
    tertiaryContainer = tertiaryContainerLightMediumContrast,
    onTertiaryContainer = onTertiaryContainerLightMediumContrast,
    error = errorLightMediumContrast,
    onError = onErrorLightMediumContrast,
    errorContainer = errorContainerLightMediumContrast,
    onErrorContainer = onErrorContainerLightMediumContrast,
    background = backgroundLightMediumContrast,
    onBackground = onBackgroundLightMediumContrast,
    surface = surfaceLightMediumContrast,
    onSurface = onSurfaceLightMediumContrast,
    surfaceVariant = surfaceVariantLightMediumContrast,
    onSurfaceVariant = onSurfaceVariantLightMediumContrast,
    outline = outlineLightMediumContrast,
    outlineVariant = outlineVariantLightMediumContrast,
    scrim = scrimLightMediumContrast,
    inverseSurface = inverseSurfaceLightMediumContrast,
    inverseOnSurface = inverseOnSurfaceLightMediumContrast,
    inversePrimary = inversePrimaryLightMediumContrast,
    surfaceDim = surfaceDimLightMediumContrast,
    surfaceBright = surfaceBrightLightMediumContrast,
    surfaceContainerLowest = surfaceContainerLowestLightMediumContrast,
    surfaceContainerLow = surfaceContainerLowLightMediumContrast,
    surfaceContainer = surfaceContainerLightMediumContrast,
    surfaceContainerHigh = surfaceContainerHighLightMediumContrast,
    surfaceContainerHighest = surfaceContainerHighestLightMediumContrast,
  )


  override fun mediumContrastDark(): ColorScheme = darkColorScheme(
    primary = primaryDarkMediumContrast,
    onPrimary = onPrimaryDarkMediumContrast,
    primaryContainer = primaryContainerDarkMediumContrast,
    onPrimaryContainer = onPrimaryContainerDarkMediumContrast,
    secondary = secondaryDarkMediumContrast,
    onSecondary = onSecondaryDarkMediumContrast,
    secondaryContainer = secondaryContainerDarkMediumContrast,
    onSecondaryContainer = onSecondaryContainerDarkMediumContrast,
    tertiary = tertiaryDarkMediumContrast,
    onTertiary = onTertiaryDarkMediumContrast,
    tertiaryContainer = tertiaryContainerDarkMediumContrast,
    onTertiaryContainer = onTertiaryContainerDarkMediumContrast,
    error = errorDarkMediumContrast,
    onError = onErrorDarkMediumContrast,
    errorContainer = errorContainerDarkMediumContrast,
    onErrorContainer = onErrorContainerDarkMediumContrast,
    background = backgroundDarkMediumContrast,
    onBackground = onBackgroundDarkMediumContrast,
    surface = surfaceDarkMediumContrast,
    onSurface = onSurfaceDarkMediumContrast,
    surfaceVariant = surfaceVariantDarkMediumContrast,
    onSurfaceVariant = onSurfaceVariantDarkMediumContrast,
    outline = outlineDarkMediumContrast,
    outlineVariant = outlineVariantDarkMediumContrast,
    scrim = scrimDarkMediumContrast,
    inverseSurface = inverseSurfaceDarkMediumContrast,
    inverseOnSurface = inverseOnSurfaceDarkMediumContrast,
    inversePrimary = inversePrimaryDarkMediumContrast,
    surfaceDim = surfaceDimDarkMediumContrast,
    surfaceBright = surfaceBrightDarkMediumContrast,
    surfaceContainerLowest = surfaceContainerLowestDarkMediumContrast,
    surfaceContainerLow = surfaceContainerLowDarkMediumContrast,
    surfaceContainer = surfaceContainerDarkMediumContrast,
    surfaceContainerHigh = surfaceContainerHighDarkMediumContrast,
    surfaceContainerHighest = surfaceContainerHighestDarkMediumContrast,
  )

  override fun highContrastLight(): ColorScheme = lightColorScheme(
    primary = primaryLightHighContrast,
    onPrimary = onPrimaryLightHighContrast,
    primaryContainer = primaryContainerLightHighContrast,
    onPrimaryContainer = onPrimaryContainerLightHighContrast,
    secondary = secondaryLightHighContrast,
    onSecondary = onSecondaryLightHighContrast,
    secondaryContainer = secondaryContainerLightHighContrast,
    onSecondaryContainer = onSecondaryContainerLightHighContrast,
    tertiary = tertiaryLightHighContrast,
    onTertiary = onTertiaryLightHighContrast,
    tertiaryContainer = tertiaryContainerLightHighContrast,
    onTertiaryContainer = onTertiaryContainerLightHighContrast,
    error = errorLightHighContrast,
    onError = onErrorLightHighContrast,
    errorContainer = errorContainerLightHighContrast,
    onErrorContainer = onErrorContainerLightHighContrast,
    background = backgroundLightHighContrast,
    onBackground = onBackgroundLightHighContrast,
    surface = surfaceLightHighContrast,
    onSurface = onSurfaceLightHighContrast,
    surfaceVariant = surfaceVariantLightHighContrast,
    onSurfaceVariant = onSurfaceVariantLightHighContrast,
    outline = outlineLightHighContrast,
    outlineVariant = outlineVariantLightHighContrast,
    scrim = scrimLightHighContrast,
    inverseSurface = inverseSurfaceLightHighContrast,
    inverseOnSurface = inverseOnSurfaceLightHighContrast,
    inversePrimary = inversePrimaryLightHighContrast,
    surfaceDim = surfaceDimLightHighContrast,
    surfaceBright = surfaceBrightLightHighContrast,
    surfaceContainerLowest = surfaceContainerLowestLightHighContrast,
    surfaceContainerLow = surfaceContainerLowLightHighContrast,
    surfaceContainer = surfaceContainerLightHighContrast,
    surfaceContainerHigh = surfaceContainerHighLightHighContrast,
    surfaceContainerHighest = surfaceContainerHighestLightHighContrast,
  )

  override fun highContrastDark(): ColorScheme = darkColorScheme(
    primary = primaryDarkHighContrast,
    onPrimary = onPrimaryDarkHighContrast,
    primaryContainer = primaryContainerDarkHighContrast,
    onPrimaryContainer = onPrimaryContainerDarkHighContrast,
    secondary = secondaryDarkHighContrast,
    onSecondary = onSecondaryDarkHighContrast,
    secondaryContainer = secondaryContainerDarkHighContrast,
    onSecondaryContainer = onSecondaryContainerDarkHighContrast,
    tertiary = tertiaryDarkHighContrast,
    onTertiary = onTertiaryDarkHighContrast,
    tertiaryContainer = tertiaryContainerDarkHighContrast,
    onTertiaryContainer = onTertiaryContainerDarkHighContrast,
    error = errorDarkHighContrast,
    onError = onErrorDarkHighContrast,
    errorContainer = errorContainerDarkHighContrast,
    onErrorContainer = onErrorContainerDarkHighContrast,
    background = backgroundDarkHighContrast,
    onBackground = onBackgroundDarkHighContrast,
    surface = surfaceDarkHighContrast,
    onSurface = onSurfaceDarkHighContrast,
    surfaceVariant = surfaceVariantDarkHighContrast,
    onSurfaceVariant = onSurfaceVariantDarkHighContrast,
    outline = outlineDarkHighContrast,
    outlineVariant = outlineVariantDarkHighContrast,
    scrim = scrimDarkHighContrast,
    inverseSurface = inverseSurfaceDarkHighContrast,
    inverseOnSurface = inverseOnSurfaceDarkHighContrast,
    inversePrimary = inversePrimaryDarkHighContrast,
    surfaceDim = surfaceDimDarkHighContrast,
    surfaceBright = surfaceBrightDarkHighContrast,
    surfaceContainerLowest = surfaceContainerLowestDarkHighContrast,
    surfaceContainerLow = surfaceContainerLowDarkHighContrast,
    surfaceContainer = surfaceContainerDarkHighContrast,
    surfaceContainerHigh = surfaceContainerHighDarkHighContrast,
    surfaceContainerHighest = surfaceContainerHighestDarkHighContrast,
  )
}