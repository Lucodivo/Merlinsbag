package com.inasweaterpoorlyknit.core.ui.theme.scheme

import androidx.compose.material3.ColorScheme
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

interface ColorPaletteScheme{

  val nameStrRes: Int

  val primaryLight: Color
  val onPrimaryLight: Color
  val primaryContainerLight: Color
  val onPrimaryContainerLight: Color
  val secondaryLight: Color
  val onSecondaryLight: Color
  val secondaryContainerLight: Color
  val onSecondaryContainerLight: Color
  val tertiaryLight: Color
  val onTertiaryLight: Color
  val tertiaryContainerLight: Color
  val onTertiaryContainerLight: Color
  val errorLight: Color
  val onErrorLight: Color
  val errorContainerLight: Color
  val onErrorContainerLight: Color
  val backgroundLight: Color
  val onBackgroundLight: Color
  val surfaceLight: Color
  val onSurfaceLight: Color
  val surfaceVariantLight: Color
  val onSurfaceVariantLight: Color
  val outlineLight: Color
  val outlineVariantLight: Color
  val scrimLight: Color
  val inverseSurfaceLight: Color
  val inverseOnSurfaceLight: Color
  val inversePrimaryLight: Color
  val surfaceDimLight: Color
  val surfaceBrightLight: Color
  val surfaceContainerLowestLight: Color
  val surfaceContainerLowLight: Color
  val surfaceContainerLight: Color
  val surfaceContainerHighLight: Color
  val surfaceContainerHighestLight: Color

  val primaryLightMediumContrast: Color
  val onPrimaryLightMediumContrast: Color
  val primaryContainerLightMediumContrast: Color
  val onPrimaryContainerLightMediumContrast: Color
  val secondaryLightMediumContrast: Color
  val onSecondaryLightMediumContrast: Color
  val secondaryContainerLightMediumContrast: Color
  val onSecondaryContainerLightMediumContrast: Color
  val tertiaryLightMediumContrast: Color
  val onTertiaryLightMediumContrast: Color
  val tertiaryContainerLightMediumContrast: Color
  val onTertiaryContainerLightMediumContrast: Color
  val errorLightMediumContrast: Color
  val onErrorLightMediumContrast: Color
  val errorContainerLightMediumContrast: Color
  val onErrorContainerLightMediumContrast: Color
  val backgroundLightMediumContrast: Color
  val onBackgroundLightMediumContrast: Color
  val surfaceLightMediumContrast: Color
  val onSurfaceLightMediumContrast: Color
  val surfaceVariantLightMediumContrast: Color
  val onSurfaceVariantLightMediumContrast: Color
  val outlineLightMediumContrast: Color
  val outlineVariantLightMediumContrast: Color
  val scrimLightMediumContrast: Color
  val inverseSurfaceLightMediumContrast: Color
  val inverseOnSurfaceLightMediumContrast: Color
  val inversePrimaryLightMediumContrast: Color
  val surfaceDimLightMediumContrast: Color
  val surfaceBrightLightMediumContrast: Color
  val surfaceContainerLowestLightMediumContrast: Color
  val surfaceContainerLowLightMediumContrast: Color
  val surfaceContainerLightMediumContrast: Color
  val surfaceContainerHighLightMediumContrast: Color
  val surfaceContainerHighestLightMediumContrast: Color

  val primaryLightHighContrast: Color
  val onPrimaryLightHighContrast: Color
  val primaryContainerLightHighContrast: Color
  val onPrimaryContainerLightHighContrast: Color
  val secondaryLightHighContrast: Color
  val onSecondaryLightHighContrast: Color
  val secondaryContainerLightHighContrast: Color
  val onSecondaryContainerLightHighContrast: Color
  val tertiaryLightHighContrast: Color
  val onTertiaryLightHighContrast: Color
  val tertiaryContainerLightHighContrast: Color
  val onTertiaryContainerLightHighContrast: Color
  val errorLightHighContrast: Color
  val onErrorLightHighContrast: Color
  val errorContainerLightHighContrast: Color
  val onErrorContainerLightHighContrast: Color
  val backgroundLightHighContrast: Color
  val onBackgroundLightHighContrast: Color
  val surfaceLightHighContrast: Color
  val onSurfaceLightHighContrast: Color
  val surfaceVariantLightHighContrast: Color
  val onSurfaceVariantLightHighContrast: Color
  val outlineLightHighContrast: Color
  val outlineVariantLightHighContrast: Color
  val scrimLightHighContrast: Color
  val inverseSurfaceLightHighContrast: Color
  val inverseOnSurfaceLightHighContrast: Color
  val inversePrimaryLightHighContrast: Color
  val surfaceDimLightHighContrast: Color
  val surfaceBrightLightHighContrast: Color
  val surfaceContainerLowestLightHighContrast: Color
  val surfaceContainerLowLightHighContrast: Color
  val surfaceContainerLightHighContrast: Color
  val surfaceContainerHighLightHighContrast: Color
  val surfaceContainerHighestLightHighContrast: Color

  val primaryDark: Color
  val onPrimaryDark: Color
  val primaryContainerDark: Color
  val onPrimaryContainerDark: Color
  val secondaryDark: Color
  val onSecondaryDark: Color
  val secondaryContainerDark: Color
  val onSecondaryContainerDark: Color
  val tertiaryDark: Color
  val onTertiaryDark: Color
  val tertiaryContainerDark: Color
  val onTertiaryContainerDark: Color
  val errorDark: Color
  val onErrorDark: Color
  val errorContainerDark: Color
  val onErrorContainerDark: Color
  val backgroundDark: Color
  val onBackgroundDark: Color
  val surfaceDark: Color
  val onSurfaceDark: Color
  val surfaceVariantDark: Color
  val onSurfaceVariantDark: Color
  val outlineDark: Color
  val outlineVariantDark: Color
  val scrimDark: Color
  val inverseSurfaceDark: Color
  val inverseOnSurfaceDark: Color
  val inversePrimaryDark: Color
  val surfaceDimDark: Color
  val surfaceBrightDark: Color
  val surfaceContainerLowestDark: Color
  val surfaceContainerLowDark: Color
  val surfaceContainerDark: Color
  val surfaceContainerHighDark: Color
  val surfaceContainerHighestDark: Color

  val primaryDarkMediumContrast: Color
  val onPrimaryDarkMediumContrast: Color
  val primaryContainerDarkMediumContrast: Color
  val onPrimaryContainerDarkMediumContrast: Color
  val secondaryDarkMediumContrast: Color
  val onSecondaryDarkMediumContrast: Color
  val secondaryContainerDarkMediumContrast: Color
  val onSecondaryContainerDarkMediumContrast: Color
  val tertiaryDarkMediumContrast: Color
  val onTertiaryDarkMediumContrast: Color
  val tertiaryContainerDarkMediumContrast: Color
  val onTertiaryContainerDarkMediumContrast: Color
  val errorDarkMediumContrast: Color
  val onErrorDarkMediumContrast: Color
  val errorContainerDarkMediumContrast: Color
  val onErrorContainerDarkMediumContrast: Color
  val backgroundDarkMediumContrast: Color
  val onBackgroundDarkMediumContrast: Color
  val surfaceDarkMediumContrast: Color
  val onSurfaceDarkMediumContrast: Color
  val surfaceVariantDarkMediumContrast: Color
  val onSurfaceVariantDarkMediumContrast: Color
  val outlineDarkMediumContrast: Color
  val outlineVariantDarkMediumContrast: Color
  val scrimDarkMediumContrast: Color
  val inverseSurfaceDarkMediumContrast: Color
  val inverseOnSurfaceDarkMediumContrast: Color
  val inversePrimaryDarkMediumContrast: Color
  val surfaceDimDarkMediumContrast: Color
  val surfaceBrightDarkMediumContrast: Color
  val surfaceContainerLowestDarkMediumContrast: Color
  val surfaceContainerLowDarkMediumContrast: Color
  val surfaceContainerDarkMediumContrast: Color
  val surfaceContainerHighDarkMediumContrast: Color
  val surfaceContainerHighestDarkMediumContrast: Color

  val primaryDarkHighContrast: Color
  val onPrimaryDarkHighContrast: Color
  val primaryContainerDarkHighContrast: Color
  val onPrimaryContainerDarkHighContrast: Color
  val secondaryDarkHighContrast: Color
  val onSecondaryDarkHighContrast: Color
  val secondaryContainerDarkHighContrast: Color
  val onSecondaryContainerDarkHighContrast: Color
  val tertiaryDarkHighContrast: Color
  val onTertiaryDarkHighContrast: Color
  val tertiaryContainerDarkHighContrast: Color
  val onTertiaryContainerDarkHighContrast: Color
  val errorDarkHighContrast: Color
  val onErrorDarkHighContrast: Color
  val errorContainerDarkHighContrast: Color
  val onErrorContainerDarkHighContrast: Color
  val backgroundDarkHighContrast: Color
  val onBackgroundDarkHighContrast: Color
  val surfaceDarkHighContrast: Color
  val onSurfaceDarkHighContrast: Color
  val surfaceVariantDarkHighContrast: Color
  val onSurfaceVariantDarkHighContrast: Color
  val outlineDarkHighContrast: Color
  val outlineVariantDarkHighContrast: Color
  val scrimDarkHighContrast: Color
  val inverseSurfaceDarkHighContrast: Color
  val inverseOnSurfaceDarkHighContrast: Color
  val inversePrimaryDarkHighContrast: Color
  val surfaceDimDarkHighContrast: Color
  val surfaceBrightDarkHighContrast: Color
  val surfaceContainerLowestDarkHighContrast: Color
  val surfaceContainerLowDarkHighContrast: Color
  val surfaceContainerDarkHighContrast: Color
  val surfaceContainerHighDarkHighContrast: Color
  val surfaceContainerHighestDarkHighContrast: Color

  fun light(): ColorScheme =
      lightColorScheme(
        primary = primaryLight,
        onPrimary = onPrimaryLight,
        primaryContainer = primaryContainerLight,
        onPrimaryContainer = onPrimaryContainerLight,
        secondary = secondaryLight,
        onSecondary = onSecondaryLight,
        secondaryContainer = secondaryContainerLight,
        onSecondaryContainer = onSecondaryContainerLight,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        inversePrimary = inversePrimaryLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
      )

  fun dark(): ColorScheme =
      darkColorScheme(
        primary = primaryDark,
        onPrimary = onPrimaryDark,
        primaryContainer = primaryContainerDark,
        onPrimaryContainer = onPrimaryContainerDark,
        secondary = secondaryDark,
        onSecondary = onSecondaryDark,
        secondaryContainer = secondaryContainerDark,
        onSecondaryContainer = onSecondaryContainerDark,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        inversePrimary = inversePrimaryDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
      )

  fun mediumContrastLight(): ColorScheme =
      lightColorScheme(
        primary = primaryLightMediumContrast,
        onPrimary = onPrimaryLightMediumContrast,
        primaryContainer = primaryContainerLightMediumContrast,
        onPrimaryContainer = onPrimaryContainerLightMediumContrast,
        secondary = secondaryLightMediumContrast,
        onSecondary = onSecondaryLightMediumContrast,
        secondaryContainer = secondaryContainerLightMediumContrast,
        onSecondaryContainer = onSecondaryContainerLightMediumContrast,
        tertiary = tertiaryLightMediumContrast,
        onTertiary = onTertiaryLightMediumContrast,
        tertiaryContainer = tertiaryContainerLightMediumContrast,
        onTertiaryContainer = onTertiaryContainerLightMediumContrast,
        error = errorLightMediumContrast,
        onError = onErrorLightMediumContrast,
        errorContainer = errorContainerLightMediumContrast,
        onErrorContainer = onErrorContainerLightMediumContrast,
        background = backgroundLightMediumContrast,
        onBackground = onBackgroundLightMediumContrast,
        surface = surfaceLightMediumContrast,
        onSurface = onSurfaceLightMediumContrast,
        surfaceVariant = surfaceVariantLightMediumContrast,
        onSurfaceVariant = onSurfaceVariantLightMediumContrast,
        outline = outlineLightMediumContrast,
        outlineVariant = outlineVariantLightMediumContrast,
        scrim = scrimLightMediumContrast,
        inverseSurface = inverseSurfaceLightMediumContrast,
        inverseOnSurface = inverseOnSurfaceLightMediumContrast,
        inversePrimary = inversePrimaryLightMediumContrast,
        surfaceDim = surfaceDimLightMediumContrast,
        surfaceBright = surfaceBrightLightMediumContrast,
        surfaceContainerLowest = surfaceContainerLowestLightMediumContrast,
        surfaceContainerLow = surfaceContainerLowLightMediumContrast,
        surfaceContainer = surfaceContainerLightMediumContrast,
        surfaceContainerHigh = surfaceContainerHighLightMediumContrast,
        surfaceContainerHighest = surfaceContainerHighestLightMediumContrast,
      )

  fun mediumContrastDark(): ColorScheme =
      darkColorScheme(
        primary = primaryDarkMediumContrast,
        onPrimary = onPrimaryDarkMediumContrast,
        primaryContainer = primaryContainerDarkMediumContrast,
        onPrimaryContainer = onPrimaryContainerDarkMediumContrast,
        secondary = secondaryDarkMediumContrast,
        onSecondary = onSecondaryDarkMediumContrast,
        secondaryContainer = secondaryContainerDarkMediumContrast,
        onSecondaryContainer = onSecondaryContainerDarkMediumContrast,
        tertiary = tertiaryDarkMediumContrast,
        onTertiary = onTertiaryDarkMediumContrast,
        tertiaryContainer = tertiaryContainerDarkMediumContrast,
        onTertiaryContainer = onTertiaryContainerDarkMediumContrast,
        error = errorDarkMediumContrast,
        onError = onErrorDarkMediumContrast,
        errorContainer = errorContainerDarkMediumContrast,
        onErrorContainer = onErrorContainerDarkMediumContrast,
        background = backgroundDarkMediumContrast,
        onBackground = onBackgroundDarkMediumContrast,
        surface = surfaceDarkMediumContrast,
        onSurface = onSurfaceDarkMediumContrast,
        surfaceVariant = surfaceVariantDarkMediumContrast,
        onSurfaceVariant = onSurfaceVariantDarkMediumContrast,
        outline = outlineDarkMediumContrast,
        outlineVariant = outlineVariantDarkMediumContrast,
        scrim = scrimDarkMediumContrast,
        inverseSurface = inverseSurfaceDarkMediumContrast,
        inverseOnSurface = inverseOnSurfaceDarkMediumContrast,
        inversePrimary = inversePrimaryDarkMediumContrast,
        surfaceDim = surfaceDimDarkMediumContrast,
        surfaceBright = surfaceBrightDarkMediumContrast,
        surfaceContainerLowest = surfaceContainerLowestDarkMediumContrast,
        surfaceContainerLow = surfaceContainerLowDarkMediumContrast,
        surfaceContainer = surfaceContainerDarkMediumContrast,
        surfaceContainerHigh = surfaceContainerHighDarkMediumContrast,
        surfaceContainerHighest = surfaceContainerHighestDarkMediumContrast,
      )

  fun highContrastLight(): ColorScheme =
      lightColorScheme(
        primary = primaryLightHighContrast,
        onPrimary = onPrimaryLightHighContrast,
        primaryContainer = primaryContainerLightHighContrast,
        onPrimaryContainer = onPrimaryContainerLightHighContrast,
        secondary = secondaryLightHighContrast,
        onSecondary = onSecondaryLightHighContrast,
        secondaryContainer = secondaryContainerLightHighContrast,
        onSecondaryContainer = onSecondaryContainerLightHighContrast,
        tertiary = tertiaryLightHighContrast,
        onTertiary = onTertiaryLightHighContrast,
        tertiaryContainer = tertiaryContainerLightHighContrast,
        onTertiaryContainer = onTertiaryContainerLightHighContrast,
        error = errorLightHighContrast,
        onError = onErrorLightHighContrast,
        errorContainer = errorContainerLightHighContrast,
        onErrorContainer = onErrorContainerLightHighContrast,
        background = backgroundLightHighContrast,
        onBackground = onBackgroundLightHighContrast,
        surface = surfaceLightHighContrast,
        onSurface = onSurfaceLightHighContrast,
        surfaceVariant = surfaceVariantLightHighContrast,
        onSurfaceVariant = onSurfaceVariantLightHighContrast,
        outline = outlineLightHighContrast,
        outlineVariant = outlineVariantLightHighContrast,
        scrim = scrimLightHighContrast,
        inverseSurface = inverseSurfaceLightHighContrast,
        inverseOnSurface = inverseOnSurfaceLightHighContrast,
        inversePrimary = inversePrimaryLightHighContrast,
        surfaceDim = surfaceDimLightHighContrast,
        surfaceBright = surfaceBrightLightHighContrast,
        surfaceContainerLowest = surfaceContainerLowestLightHighContrast,
        surfaceContainerLow = surfaceContainerLowLightHighContrast,
        surfaceContainer = surfaceContainerLightHighContrast,
        surfaceContainerHigh = surfaceContainerHighLightHighContrast,
        surfaceContainerHighest = surfaceContainerHighestLightHighContrast,
      )

  fun highContrastDark(): ColorScheme =
      darkColorScheme(
        primary = primaryDarkHighContrast,
        onPrimary = onPrimaryDarkHighContrast,
        primaryContainer = primaryContainerDarkHighContrast,
        onPrimaryContainer = onPrimaryContainerDarkHighContrast,
        secondary = secondaryDarkHighContrast,
        onSecondary = onSecondaryDarkHighContrast,
        secondaryContainer = secondaryContainerDarkHighContrast,
        onSecondaryContainer = onSecondaryContainerDarkHighContrast,
        tertiary = tertiaryDarkHighContrast,
        onTertiary = onTertiaryDarkHighContrast,
        tertiaryContainer = tertiaryContainerDarkHighContrast,
        onTertiaryContainer = onTertiaryContainerDarkHighContrast,
        error = errorDarkHighContrast,
        onError = onErrorDarkHighContrast,
        errorContainer = errorContainerDarkHighContrast,
        onErrorContainer = onErrorContainerDarkHighContrast,
        background = backgroundDarkHighContrast,
        onBackground = onBackgroundDarkHighContrast,
        surface = surfaceDarkHighContrast,
        onSurface = onSurfaceDarkHighContrast,
        surfaceVariant = surfaceVariantDarkHighContrast,
        onSurfaceVariant = onSurfaceVariantDarkHighContrast,
        outline = outlineDarkHighContrast,
        outlineVariant = outlineVariantDarkHighContrast,
        scrim = scrimDarkHighContrast,
        inverseSurface = inverseSurfaceDarkHighContrast,
        inverseOnSurface = inverseOnSurfaceDarkHighContrast,
        inversePrimary = inversePrimaryDarkHighContrast,
        surfaceDim = surfaceDimDarkHighContrast,
        surfaceBright = surfaceBrightDarkHighContrast,
        surfaceContainerLowest = surfaceContainerLowestDarkHighContrast,
        surfaceContainerLow = surfaceContainerLowDarkHighContrast,
        surfaceContainer = surfaceContainerDarkHighContrast,
        surfaceContainerHigh = surfaceContainerHighDarkHighContrast,
        surfaceContainerHighest = surfaceContainerHighestDarkHighContrast,
      )
}
