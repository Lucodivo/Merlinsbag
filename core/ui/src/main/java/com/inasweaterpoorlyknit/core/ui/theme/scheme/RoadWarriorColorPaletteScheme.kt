package com.inasweaterpoorlyknit.core.ui.theme.scheme

import androidx.compose.ui.graphics.Color
import com.inasweaterpoorlyknit.core.ui.R

// Color Scheme mostly generated using https://m3.material.io/theme-builder

object RoadWarriorColorPaletteScheme: ColorPaletteScheme {

  override val nameStrRes: Int = R.string.road_warrior

  override val primaryLight = Color(0xFF7D5700)
  override val onPrimaryLight = Color(0xFFFFFFFF)
  override val primaryContainerLight = Color(0xFFEAB044)
  override val onPrimaryContainerLight = Color(0xFF3E2900)
  override val secondaryLight = Color(0xFF735A30)
  override val onSecondaryLight = Color(0xFFFFFFFF)
  override val secondaryContainerLight = Color(0xFFFFE0B1)
  override val onSecondaryContainerLight = Color(0xFF5C451D)
  override val tertiaryLight = Color(0xFF556500)
  override val onTertiaryLight = Color(0xFFFFFFFF)
  override val tertiaryContainerLight = Color(0xFFB0C45D)
  override val onTertiaryContainerLight = Color(0xFF283100)
  override val errorLight = Color(0xFFBA1A1A)
  override val onErrorLight = Color(0xFFFFFFFF)
  override val errorContainerLight = Color(0xFFFFDAD6)
  override val onErrorContainerLight = Color(0xFF410002)
  override val backgroundLight = Color(0xFFFFF8F3)
  override val onBackgroundLight = Color(0xFF201B13)
  override val surfaceLight = Color(0xFFFFF8F3)
  override val onSurfaceLight = Color(0xFF201B13)
  override val surfaceVariantLight = Color(0xFFF1E0CB)
  override val onSurfaceVariantLight = Color(0xFF504536)
  override val outlineLight = Color(0xFF827563)
  override val outlineVariantLight = Color(0xFFD4C4B0)
  override val scrimLight = Color(0xFF000000)
  override val inverseSurfaceLight = Color(0xFF353027)
  override val inverseOnSurfaceLight = Color(0xFFFAEFE2)
  override val inversePrimaryLight = Color(0xFFF8BC4F)
  override val surfaceDimLight = Color(0xFFE3D8CC)
  override val surfaceBrightLight = Color(0xFFFFF8F3)
  override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
  override val surfaceContainerLowLight = Color(0xFFFDF2E5)
  override val surfaceContainerLight = Color(0xFFF7ECE0)
  override val surfaceContainerHighLight = Color(0xFFF2E6DA)
  override val surfaceContainerHighestLight = Color(0xFFECE1D4)

  override val primaryLightMediumContrast = Color(0xFF5A3E00)
  override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
  override val primaryContainerLightMediumContrast = Color(0xFF9A6C00)
  override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
  override val secondaryLightMediumContrast = Color(0xFF553F18)
  override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
  override val secondaryContainerLightMediumContrast = Color(0xFF8B7044)
  override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
  override val tertiaryLightMediumContrast = Color(0xFF3B4800)
  override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
  override val tertiaryContainerLightMediumContrast = Color(0xFF6A7C1C)
  override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
  override val errorLightMediumContrast = Color(0xFF8C0009)
  override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
  override val errorContainerLightMediumContrast = Color(0xFFDA342E)
  override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
  override val backgroundLightMediumContrast = Color(0xFFFFF8F3)
  override val onBackgroundLightMediumContrast = Color(0xFF201B13)
  override val surfaceLightMediumContrast = Color(0xFFFFF8F3)
  override val onSurfaceLightMediumContrast = Color(0xFF201B13)
  override val surfaceVariantLightMediumContrast = Color(0xFFF1E0CB)
  override val onSurfaceVariantLightMediumContrast = Color(0xFF4C4132)
  override val outlineLightMediumContrast = Color(0xFF695D4D)
  override val outlineVariantLightMediumContrast = Color(0xFF867967)
  override val scrimLightMediumContrast = Color(0xFF000000)
  override val inverseSurfaceLightMediumContrast = Color(0xFF353027)
  override val inverseOnSurfaceLightMediumContrast = Color(0xFFFAEFE2)
  override val inversePrimaryLightMediumContrast = Color(0xFFF8BC4F)
  override val surfaceDimLightMediumContrast = Color(0xFFE3D8CC)
  override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F3)
  override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
  override val surfaceContainerLowLightMediumContrast = Color(0xFFFDF2E5)
  override val surfaceContainerLightMediumContrast = Color(0xFFF7ECE0)
  override val surfaceContainerHighLightMediumContrast = Color(0xFFF2E6DA)
  override val surfaceContainerHighestLightMediumContrast = Color(0xFFECE1D4)

  override val primaryLightHighContrast = Color(0xFF301F00)
  override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
  override val primaryContainerLightHighContrast = Color(0xFF5A3E00)
  override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
  override val secondaryLightHighContrast = Color(0xFF301F00)
  override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
  override val secondaryContainerLightHighContrast = Color(0xFF553F18)
  override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
  override val tertiaryLightHighContrast = Color(0xFF1E2500)
  override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
  override val tertiaryContainerLightHighContrast = Color(0xFF3B4800)
  override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
  override val errorLightHighContrast = Color(0xFF4E0002)
  override val onErrorLightHighContrast = Color(0xFFFFFFFF)
  override val errorContainerLightHighContrast = Color(0xFF8C0009)
  override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
  override val backgroundLightHighContrast = Color(0xFFFFF8F3)
  override val onBackgroundLightHighContrast = Color(0xFF201B13)
  override val surfaceLightHighContrast = Color(0xFFFFF8F3)
  override val onSurfaceLightHighContrast = Color(0xFF000000)
  override val surfaceVariantLightHighContrast = Color(0xFFF1E0CB)
  override val onSurfaceVariantLightHighContrast = Color(0xFF2B2315)
  override val outlineLightHighContrast = Color(0xFF4C4132)
  override val outlineVariantLightHighContrast = Color(0xFF4C4132)
  override val scrimLightHighContrast = Color(0xFF000000)
  override val inverseSurfaceLightHighContrast = Color(0xFF353027)
  override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
  override val inversePrimaryLightHighContrast = Color(0xFFFFE9CA)
  override val surfaceDimLightHighContrast = Color(0xFFE3D8CC)
  override val surfaceBrightLightHighContrast = Color(0xFFFFF8F3)
  override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
  override val surfaceContainerLowLightHighContrast = Color(0xFFFDF2E5)
  override val surfaceContainerLightHighContrast = Color(0xFFF7ECE0)
  override val surfaceContainerHighLightHighContrast = Color(0xFFF2E6DA)
  override val surfaceContainerHighestLightHighContrast = Color(0xFFECE1D4)

  override val primaryDark = Color(0xFFFFCC74)
  override val onPrimaryDark = Color(0xFF422C00)
  override val primaryContainerDark = Color(0xFFD9A135)
  override val onPrimaryContainerDark = Color(0xFF2D1D00)
  override val secondaryDark = Color(0xFFE2C28F)
  override val onSecondaryDark = Color(0xFF402D07)
  override val secondaryContainerDark = Color(0xFF4F3A12)
  override val onSecondaryContainerDark = Color(0xFFEDCC98)
  override val tertiaryDark = Color(0xFFC8DD72)
  override val onTertiaryDark = Color(0xFF2B3400)
  override val tertiaryContainerDark = Color(0xFF9FB34E)
  override val onTertiaryContainerDark = Color(0xFF1B2200)
  override val errorDark = Color(0xFFFFB4AB)
  override val onErrorDark = Color(0xFF690005)
  override val errorContainerDark = Color(0xFF93000A)
  override val onErrorContainerDark = Color(0xFFFFDAD6)
  override val backgroundDark = Color(0xFF17130C)
  override val onBackgroundDark = Color(0xFFECE1D4)
  override val surfaceDark = Color(0xFF17130C)
  override val onSurfaceDark = Color(0xFFECE1D4)
  override val surfaceVariantDark = Color(0xFF504536)
  override val onSurfaceVariantDark = Color(0xFFD4C4B0)
  override val outlineDark = Color(0xFF9C8F7C)
  override val outlineVariantDark = Color(0xFF504536)
  override val scrimDark = Color(0xFF000000)
  override val inverseSurfaceDark = Color(0xFFECE1D4)
  override val inverseOnSurfaceDark = Color(0xFF353027)
  override val inversePrimaryDark = Color(0xFF7D5700)
  override val surfaceDimDark = Color(0xFF17130C)
  override val surfaceBrightDark = Color(0xFF3E3830)
  override val surfaceContainerLowestDark = Color(0xFF120E07)
  override val surfaceContainerLowDark = Color(0xFF201B13)
  override val surfaceContainerDark = Color(0xFF241F17)
  override val surfaceContainerHighDark = Color(0xFF2F2921)
  override val surfaceContainerHighestDark = Color(0xFF3A342B)

  override val primaryDarkMediumContrast = Color(0xFFFFCC74)
  override val onPrimaryDarkMediumContrast = Color(0xFF2C1C00)
  override val primaryContainerDarkMediumContrast = Color(0xFFD9A135)
  override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
  override val secondaryDarkMediumContrast = Color(0xFFE7C693)
  override val onSecondaryDarkMediumContrast = Color(0xFF211400)
  override val secondaryContainerDarkMediumContrast = Color(0xFFA98C5E)
  override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
  override val tertiaryDarkMediumContrast = Color(0xFFC8DD72)
  override val onTertiaryDarkMediumContrast = Color(0xFF1A2100)
  override val tertiaryContainerDarkMediumContrast = Color(0xFF9FB34E)
  override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
  override val errorDarkMediumContrast = Color(0xFFFFBAB1)
  override val onErrorDarkMediumContrast = Color(0xFF370001)
  override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
  override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
  override val backgroundDarkMediumContrast = Color(0xFF17130C)
  override val onBackgroundDarkMediumContrast = Color(0xFFECE1D4)
  override val surfaceDarkMediumContrast = Color(0xFF17130C)
  override val onSurfaceDarkMediumContrast = Color(0xFFFFFAF7)
  override val surfaceVariantDarkMediumContrast = Color(0xFF504536)
  override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8C8B4)
  override val outlineDarkMediumContrast = Color(0xFFAFA18D)
  override val outlineVariantDarkMediumContrast = Color(0xFF8E816F)
  override val scrimDarkMediumContrast = Color(0xFF000000)
  override val inverseSurfaceDarkMediumContrast = Color(0xFFECE1D4)
  override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F2921)
  override val inversePrimaryDarkMediumContrast = Color(0xFF614200)
  override val surfaceDimDarkMediumContrast = Color(0xFF17130C)
  override val surfaceBrightDarkMediumContrast = Color(0xFF3E3830)
  override val surfaceContainerLowestDarkMediumContrast = Color(0xFF120E07)
  override val surfaceContainerLowDarkMediumContrast = Color(0xFF201B13)
  override val surfaceContainerDarkMediumContrast = Color(0xFF241F17)
  override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F2921)
  override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A342B)

  override val primaryDarkHighContrast = Color(0xFFFFFAF7)
  override val onPrimaryDarkHighContrast = Color(0xFF000000)
  override val primaryContainerDarkHighContrast = Color(0xFFFDC152)
  override val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
  override val secondaryDarkHighContrast = Color(0xFFFFFAF7)
  override val onSecondaryDarkHighContrast = Color(0xFF000000)
  override val secondaryContainerDarkHighContrast = Color(0xFFE7C693)
  override val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
  override val tertiaryDarkHighContrast = Color(0xFFF8FFD1)
  override val onTertiaryDarkHighContrast = Color(0xFF000000)
  override val tertiaryContainerDarkHighContrast = Color(0xFFC0D46B)
  override val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
  override val errorDarkHighContrast = Color(0xFFFFF9F9)
  override val onErrorDarkHighContrast = Color(0xFF000000)
  override val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
  override val onErrorContainerDarkHighContrast = Color(0xFF000000)
  override val backgroundDarkHighContrast = Color(0xFF17130C)
  override val onBackgroundDarkHighContrast = Color(0xFFECE1D4)
  override val surfaceDarkHighContrast = Color(0xFF17130C)
  override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
  override val surfaceVariantDarkHighContrast = Color(0xFF504536)
  override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFAF7)
  override val outlineDarkHighContrast = Color(0xFFD8C8B4)
  override val outlineVariantDarkHighContrast = Color(0xFFD8C8B4)
  override val scrimDarkHighContrast = Color(0xFF000000)
  override val inverseSurfaceDarkHighContrast = Color(0xFFECE1D4)
  override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
  override val inversePrimaryDarkHighContrast = Color(0xFF3A2600)
  override val surfaceDimDarkHighContrast = Color(0xFF17130C)
  override val surfaceBrightDarkHighContrast = Color(0xFF3E3830)
  override val surfaceContainerLowestDarkHighContrast = Color(0xFF120E07)
  override val surfaceContainerLowDarkHighContrast = Color(0xFF201B13)
  override val surfaceContainerDarkHighContrast = Color(0xFF241F17)
  override val surfaceContainerHighDarkHighContrast = Color(0xFF2F2921)
  override val surfaceContainerHighestDarkHighContrast = Color(0xFF3A342B)
}